{"version":3,"sources":["./src/app/Services/ClientService/client.service.ts","./src/app/modal-popup/modal-popup.page.ts","./src/app/modal-popup/modal-popup.page.scss","./src/app/modal-popup/modal-popup.page.html"],"names":[],"mappings":"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","file":"default-src_app_modal-popup_modal-popup_page_ts.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Client} from \"../../Models/client\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class ClientService {\n    private apiURL = environment.apiURL;\n\n    constructor(private http: HttpClient) { }\n\n    /**\n     * This function gets the list of all clients associated with a planner\n     *\n     * @author Luca Azmanov, u19004185\n     */\n    async getClientList(){\n        const url = this.apiURL+\"/client-contact/getAllPlannersContacts\";\n        return this.http.get(url).toPromise().then(data=>{\n            data = {\n                status: 200,\n                data: data\n            };\n            return data;\n        }).catch(err=>err);\n    }\n\n    /**\n     * This function accepts a client object in order to add the client to the planner's list.\n     *\n     * @param client represents the details of the client being added\n     * @return status is the code of the response\n     * @author Luca Azmanov, u19004185\n     */\n    async addClient(client: Client): Promise<number> {\n        const url = this.apiURL+\"/client-contact/createClientContact\";\n        const body = {\n            contactEmail: client.email,\n            name: client.firstName,\n            surname: client.lastName\n        };\n\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Deletes a client contact given the client ID\n     *\n     * @param id is the contactID\n     * @return status is the code of the response\n     * @author Luca Azmanov, u19004185\n     */\n    async removeClient(id: string){\n        const url = this.apiURL+\"/client-contact/deleteClientContact\";\n        const body = {\n            contactID:id,\n        };\n        return this.http.request(\"delete\", url, {body}).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Updates client's credentials based on client object provided.\n     *\n     * @param client is the client credentials used for updating\n     * @return status is the code of the response\n     * @author Luca Azmanov, u19004185\n     */\n    async updateClient(client: Client){\n        const url = this.apiURL+\"/client-contact/updateClientContact\";\n\n        const body = {\n            contactID: client.contactID,\n            email: client.email,\n            name: client.firstName,\n            surname: client.lastName\n        };\n\n        return this.http.put(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Send an email of the workout's PDF to all clients of the planner.\n     *\n     * @param workoutID is the id of the workout to get the pdf from\n     * @return status is the code of the response\n     * @author Jia Hui Wang, u18080449\n     */\n    async attemptEmailAllClientsPDF(workoutID: string): Promise<any>{\n        const url = this.apiURL+\"/client-contact/sendEmailsPDFToAllContacts\";\n        const body = {\n            workoutID: workoutID\n        };\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Send an email of the workout's video to all clients of the planner.\n     *\n     * @param workoutID is the id of the workout to get the pdf from\n     * @return status is the code of the response\n     * @author Jia Hui Wang, u18080449\n     */\n    async attemptEmailAllClientsVideo(workoutID: string): Promise<any>{\n        const url = this.apiURL+\"/client-contact/sendEmailsVideoToAllContacts\";\n        const body = {\n            workoutID: workoutID\n        };\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Send an email of the workout's PDF and video to all clients of the planner.\n     *\n     * @param workoutID is the id of the workout to get the pdf and video from\n     * @return status is the code of the response\n     * @author Jia Hui Wang, u18080449\n     */\n    async attemptEmailAllClientsMedia(workoutID: string): Promise<any>{\n        const url = this.apiURL+\"/client-contact/sendEmailsMultimediaToAllContacts\";\n        const body = {\n            workoutID: workoutID\n        };\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Send an email of the workout's PDF to selected clients of the planner.\n     *\n     * @param workoutID is the id of the workout to get the pdf from\n     * @param clients is an array of the selected clients\n     * @return status is the code of the response\n     * @author Jia Hui Wang, u18080449\n     */\n    async attemptEmailClientsPDF(workoutID: string, contact: any[]): Promise<any>{\n        const url = this.apiURL+\"/client-contact/sendEmailsPDFToContacts\";\n        const body = {\n            contacts: contact,\n            workoutID: workoutID,\n        };\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Send an email of the workout's video to selected clients of the planner.\n     *\n     * @param workoutID is the id of the workout to get the pdf from\n     * @param clients is an array of the selected clients\n     * @return status is the code of the response\n     * @author Jia Hui Wang, u18080449\n     */\n    async attemptEmailClientsVideo(workoutID: string, contact: any[]): Promise<any>{\n        const url = this.apiURL+\"/client-contact/sendEmailsVideoToContacts\";\n        const body = {\n            contacts: contact,\n            workoutID: workoutID,\n        };\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n\n    /**\n     * Send an email of the workout's PDF and video to selected clients of the planner.\n     *\n     * @param workoutID is the id of the workout to get the pdf from\n     * @param clients is an array of the selected clients\n     * @return status is the code of the response\n     * @author Jia Hui Wang, u18080449\n     */\n    async attemptEmailClientsMedia(workoutID: string, contact: any[]): Promise<any>{\n        const url = this.apiURL+\"/client-contact/sendEmailsMultimediaToContacts\";\n        const body = {\n            contacts: contact,\n            workoutID: workoutID,\n        };\n        return this.http.post(url, body).toPromise().then(()=>200).catch(error=>{\n            if(error.status===0) {\n                return 500;\n            }\n            return error.status;\n        });\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ModalController } from \"@ionic/angular\";\nimport { ClientService } from \"../Services/ClientService/client.service\";\n\n@Component({\n    selector: \"app-modal-popup\",\n    templateUrl: \"./modal-popup.page.html\",\n    styleUrls: [\"./modal-popup.page.scss\"],\n})\nexport class ModalPopupPage implements OnInit {\n    private _contacts;\n    private _contactsOriginal: any[];\n    private _submittedContacts: any[];\n\n    private name = \"\";\n    private surname = \"\";\n    private contactEmail = \"\";\n    private contactID = \"\";\n    private isChecked = false;\n    private plannerID = \"\";\n\n    constructor(private modalController: ModalController, private clientService: ClientService) { }\n\n    ngOnInit() {\n        this.loadClients();\n    }\n\n    async loadClients(){\n        const resp = await this.clientService.getClientList();\n        const data = resp.data;\n        this._contacts = new Array();\n        this._contactsOriginal = new Array();\n        for (let i = 0; i <data.length; i++) {\n            this.name = data[i].name;\n            this.surname = data[i].surname;\n            this.contactEmail = data[i].contactEmail;\n            this.contactID = data[i].contactId;\n            this.plannerID = data[i].plannerID;\n            this.isChecked = false;\n            this._contacts[i] = {\n                contactID: this.contactID,\n                contactEmail: this.contactEmail,\n                name: this.name,\n                surname: this.surname,\n                plannerID: this.plannerID\n            };\n            //this._contactsOriginal[i] = new Contact(this.contactID, this.contactEmail, this.name, this.surname, this.plannerID);\n            this._contactsOriginal[i] = {\n                contactId: this.contactID,\n                contactEmail: this.contactEmail,\n                name: this.name,\n                surname: this.surname,\n                plannerID: this.plannerID\n            };\n        }\n    }\n\n    /**\n     * Submit the selected contacts\n     *\n     * @author Jia Hui Wang u18080449\n     */\n    async submitModal(){\n        let contactsCounter = 0;\n        this._submittedContacts = new Array();\n        for (let i = 0; i <this._contacts.length; i++) {\n            if (this._contacts[i].isChecked){\n                this._submittedContacts[contactsCounter] = this._contactsOriginal[i];\n                contactsCounter++;\n            }\n        }\n        if (contactsCounter === 0){\n            alert(\"You need to select contacts or cancel if you wish to cancel the operation. \");\n        }else if (contactsCounter === this._contacts.length){\n            await this.modalController.dismiss(\"Submit all\");\n        }else{\n            await this.modalController.dismiss(this._submittedContacts);\n        }\n    }\n\n    /**\n     * Cancelling the contact selection\n     *\n     * @author Jia Hui Wang u18080449\n     */\n    async cancelModal(){\n        await this.modalController.dismiss(\"Cancelled\");\n    }\n\n    /**\n     * Function to select all the contacts in the list if the top button is clicked, or deselect all of them\n     *\n     * @author Jia Hui Wang, u18080449\n     */\n    selectAllContacts(){\n        const allCheck = document.getElementById(\"contactsCbx\");\n        const allContacts = document.getElementsByClassName(\"contactSelection\");\n        if (!(allCheck as HTMLIonCheckboxElement).checked){\n            for (let i = 0; i <this._contacts.length; i++) {\n                const thisContact = allContacts.item(i) as HTMLIonCheckboxElement;\n                thisContact.checked = true;\n                thisContact.disabled = true;\n            }\n        }else{\n            for (let i = 0; i <this._contacts.length; i++) {\n                const thisContact = allContacts.item(i) as HTMLIonCheckboxElement;\n                thisContact.checked = false;\n                thisContact.disabled = false;\n            }\n        }\n    }\n}\n","export default \".cancelButton, .submitButton {\\n  --background: none;\\n  --background-hover: none;\\n  --color: var(--ion-color-tertiary);\\n  --color-hover: var(--ion-color-primary);\\n  --background-activated: none;\\n}\\n\\n.modalButtons {\\n  display: block;\\n  float: bottom;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGFsLXBvcHVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0Esd0JBQUE7RUFDQSxrQ0FBQTtFQUNBLHVDQUFBO0VBQ0EsNEJBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7RUFDQSxhQUFBO0FBQ0YiLCJmaWxlIjoibW9kYWwtcG9wdXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhbmNlbEJ1dHRvbiwgLnN1Ym1pdEJ1dHRvbntcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICAtLWJhY2tncm91bmQtaG92ZXI6IG5vbmU7XG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci10ZXJ0aWFyeSk7XG4gIC0tY29sb3ItaG92ZXI6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogbm9uZTtcbn1cblxuLm1vZGFsQnV0dG9uc3tcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZsb2F0OiBib3R0b207XG59XG4iXX0= */\";","export default \"<ion-content>\\n  <div>\\n    <ion-item>\\n      <ion-label>Select all contacts</ion-label>\\n      <ion-checkbox id=\\\"contactsCbx\\\" (click)=\\\"selectAllContacts()\\\">Select all</ion-checkbox>\\n    </ion-item>\\n    <ion-infinite-scroll>\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let contact of _contacts\\\" >\\n        <ion-label>{{contact.contactEmail}}</ion-label>\\n        <ion-checkbox slot=\\\"start\\\" [(ngModel)]=\\\"contact.isChecked\\\" class=\\\"contactSelection\\\"></ion-checkbox>\\n      </ion-item>\\n    </ion-list>\\n    </ion-infinite-scroll>\\n  </div>\\n  <div class=\\\"modalButtons\\\">\\n    <ion-button class=\\\"submitButton\\\" mode=\\\"ios\\\" (click)=\\\"submitModal()\\\">Submit</ion-button>\\n    <ion-button class=\\\"cancelButton\\\" mode=\\\"ios\\\" (click)=\\\"cancelModal()\\\">Cancel</ion-button>\\n  </div>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}